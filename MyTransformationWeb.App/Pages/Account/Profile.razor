@page "/profile/{UserId}"
@inject ILocalStorageService LocalStorage
@inject IUserService UserService
@inject NavigationManager NavigationManager

<div class="row">
    <Nav></Nav>
    <div>
        <h2>Profile</h2>
        <ErrorBoundary @ref="@ErrorBoundary">
            <ChildContent>
                <EditForm Model="User" OnValidSubmit="HandleValidSubmitAsync">
                    <div class="row-2">
                        <div>
                            <div>
                                <label class="form-label" for="first_name">Name</label>
                                <InputText class="form-input" id="first_name" @bind-Value="User.FirstName" />
                            </div>
                            <div>
                                <label class="form-label" for="last_name">Last name</label>
                                <InputText class="form-input" id="last_name" @bind-Value="User.LastName" />
                            </div>
                            <div>
                                <label class="form-label" for="email">Email</label>
                                <InputText class="form-input-disabled" id="email" @bind-Value="User.Email" disabled="true" />
                            </div>
                        </div>
                        <div>
                            <div>
                                <label class="form-label" for="birthdate">Birthdate</label>
                                <InputDate class="form-input" id="birthdate" @bind-Value="User.Birthdate" />
                            </div>
                            <div>
                                <label class="form-label" for="profile_picture">Profile picture URL</label>
                                <textarea class="form-input" placeholder="Paste URL here" id="profile_picture" @bind="User.ProfilePicture" />
                            </div>
                            <div>
                                <button class="form-button dark-background white-text" type="submit">Submit</button>
                            </div>
                        </div>
                    </div>
                </EditForm>
            </ChildContent>
            <ErrorContent Context="ex">
                <div class="box-error">
                    <p>@ex.Message</p>
                    <button class="form-button-error" @onclick="Recover"><i class="fas fa-undo-alt"></i></button>
                </div>
            </ErrorContent>
        </ErrorBoundary>
    </div>
</div>

@code {
    [Parameter]
    public string UserId { get; set; }

    private User User = new();

    protected ErrorBoundary ErrorBoundary = default;

    protected override async Task OnInitializedAsync()
    {
        User = await LocalStorage.GetItemAsync<User>("user");
        await base.OnInitializedAsync();
    }

    private async Task HandleValidSubmitAsync()
    {
        var updateResult = await UserService.UpdateAsync(UserId, User);
        await LocalStorage.SetItemAsync("user", User);
        NavigationManager.NavigateTo("/session");
    }

    protected void Recover()
    {
        ErrorBoundary?.Recover();
    }
}
