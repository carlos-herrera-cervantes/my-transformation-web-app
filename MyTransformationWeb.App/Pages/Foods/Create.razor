@page "/food"
@inject NavigationManager navigationManager
@inject IFoodService foodService

<div class="row">
    <Nav></Nav>
    <div>
        <FoodHeader></FoodHeader>
        <h2>New food</h2>
        <ErrorBoundary @ref="@errorBoundary">
            <ChildContent>
                <EditForm Model="food" OnValidSubmit="HandleValidSubmitAsync">
                    <div class="row-2">
                        <div>
                            <div>
                                <label class="form-label" for="name">Name</label>
                                <InputText class="form-input" autocomplete="off" placeholder="name" id="name" @bind-Value="food.Name" />
                            </div>
                            <div>
                                <label class="form-label" for="measurement_unit">Measurement unit</label>
                                <InputSelect class="form-input" @bind-Value="food.MeasurementUnit">
                                    @foreach (var measurementUnit in measurementUnits)
                                    {
                                        <option value="@measurementUnit">@measurementUnit</option>
                                    }
                                </InputSelect>
                            </div>
                            <div>
                                <label class="form-label" for="portion">Portion</label>
                                <InputNumber class="form-input" placeholder="0" id="portion" @bind-Value="food.Portion" />
                            </div>
                            <div>
                                <label class="form-label" for="calories">Calories</label>
                                <InputNumber class="form-input" placeholder="0" id="calories" @bind-Value="food.Calories" />
                            </div>
                        </div>
                        <div>
                            <div>
                                <label class="form-label" for="protein">Protein</label>
                                <InputNumber class="form-input" placeholder="0" id="protein" @bind-Value="food.Protein" />
                            </div>
                            <div>
                                <label class="form-label" for="carbs">Carbs</label>
                                <InputNumber class="form-input" placeholder="0" id="carbs" @bind-Value="food.Carbs" />
                            </div>
                            <div>
                                <label class="form-label" for="fats">Fats</label>
                                <InputNumber class="form-input" placeholder="0" id="fats" @bind-Value="food.Fats" />
                            </div>
                            <div>
                                <button class="form-button dark-background white-text" type="submit">Submit</button>
                            </div>
                        </div>
                    </div>
                </EditForm>
            </ChildContent>
            <ErrorContent Context="ex">
                <div class="box-error">
                    <p>@ex.Message</p>
                    <button class="form-button-error" @onclick="Recover"><i class="fas fa-undo-alt"></i></button>
                </div>
            </ErrorContent>
        </ErrorBoundary>
    </div>
</div>

@code {
    private FoodCreation food = new();

    protected ErrorBoundary errorBoundary = default;

    private IEnumerable<string> measurementUnits = new List<string> { "gr", "ml", "unit" };

    private async Task HandleValidSubmitAsync()
    {
        food.MeasurementUnit = measurementUnits.FirstOrDefault();
        await foodService.CreateAsync(food);
        navigationManager.NavigateTo("/food/list");
    }

    protected void Recover()
    {
        errorBoundary?.Recover();
    }
}
